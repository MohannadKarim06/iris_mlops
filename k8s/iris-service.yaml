apiVersion: apps/v1
kind: Deployment
metadata:
  name: iris-service
  labels:
    app: iris-service
    version: "1.0"
spec:
  replicas: 1  #Single replica to avoid resource issues
  selector:
    matchLabels:
      app: iris-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: iris-service
        version: "1.0"
    spec:
      containers:
      - name: iris-container
        image: ${ECR_REGISTRY}/iris-bentoml:${IMAGE_TAG}
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: PROMETHEUS_MULTIPROC_DIR
          value: "/tmp"
        - name: PYTHONPATH
          value: "/app"
        

        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60    # Give more time for startup
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        resources:
          requests:
            memory: "100Mi"   
            cpu: "100m"
          limits:
            memory: "200Mi"   
            cpu: "200m"       
        
        # Security and operational settings
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # BentoML needs write access
        
        # Volume for temp files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      
      volumes:
      - name: tmp
        emptyDir: {}
      
      # Ensure pod runs on available nodes
      nodeSelector:
        kubernetes.io/arch: amd64
      
      # Tolerate node issues
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: iris-service
  labels:
    app: iris-service
spec:
  selector:
    app: iris-service
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer
  # Session affinity for better performance
  sessionAffinity: ClientIP

---
